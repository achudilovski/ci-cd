pipeline {
    agent { node 'aws-ec2-test' }
    environment {
        access_key = credentials('env-aws-access-key')
        secret_key = credentials('env-aws-secret-key')
        registry_url = "803808824931.dkr.ecr.us-east-1.amazonaws.com"
        app_weathercast = "weathercast:latest"
        app_port = "80"
    }
    stages {
        stage ('[i] Clean WC') {
            steps {
                cleanWs()
            }
        }
        stage ('[i] GIT') {
            steps {
                git branch: 'dev-jenkins', credentialsId: 'github', url: 'https://github.com/publius-github/ci-cd.git'
            }
        }
        stage('[i] Changing Data in Terraform') {
            steps {
                sh '''
                echo "\napp_image = \\"$registry_url/$app_weathercast\\"" >> ${WORKSPACE}/terraform/02-terraform-ecs/vars/nonprod.tfvars
                echo "app_port = \\"$app_port\\"" >> ${WORKSPACE}/terraform/02-terraform-ecs/vars/nonprod.tfvars
                '''
                }
        }
        stage('[i] AWS Destroy') {
            steps {
                sh '''
                export AWS_ACCESS_KEY_ID="$access_key"
                export AWS_SECRET_ACCESS_KEY="$secret_key"
                cd ${WORKSPACE}/terraform/02-terraform-ecs/
                /usr/local/bin/terraform init
                /usr/local/bin/terraform plan --var-file=vars/nonprod.tfvars
                /usr/local/bin/terraform destroy -auto-approve --var-file=vars/nonprod.tfvars
                '''
            }
        }
    }
}