<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.67">
    <script>pipeline {
    // agent { node &apos;aws-ec2-cloud&apos; }
    agent { node &apos;master&apos; }
    environment {
        access_key = &quot;&quot;
        secret_key = &quot;&quot;
        app = &quot;&quot;
        app_port = &quot;&quot;
    }
    stages {

        stage (&apos;[i] Clean WC&apos;) {
            steps {
                cleanWs()
            }
        }
        stage (&apos;[i] GIT&apos;) {
            steps {
                git branch: &apos;dev-jenkins&apos;, credentialsId: &apos;github&apos;, url: &apos;https://github.com/publius-github/ci-cd.git&apos;
            }
        }

        stage(&apos;[i] Changing Data in Terraform&apos;) {
            steps {
                sh &apos;&apos;&apos;
                echo &quot;\napp_image = \\&quot;$app\\&quot;&quot; &gt;&gt; ${WORKSPACE}/terraform/02-terraform-ecs/vars/nonprod.tfvars
                echo &quot;app_port = \\&quot;$app_port\\&quot;&quot; &gt;&gt; ${WORKSPACE}/terraform/02-terraform-ecs/vars/nonprod.tfvars
                echo &quot;aws_access_key = \\&quot;$access_key\\&quot;&quot; &gt;&gt; ${WORKSPACE}/terraform/02-terraform-ecs/vars/nonprod.tfvars
                echo &quot;aws_secret_key = \\&quot;$secret_key\\&quot;&quot; &gt;&gt; ${WORKSPACE}/terraform/02-terraform-ecs/vars/nonprod.tfvars
                &apos;&apos;&apos;
                }
        }

        stage(&apos;[i] AWS Deployment&apos;) {
            steps {
                sh &apos;&apos;&apos;
                export AWS_ACCESS_KEY_ID=&quot;$access_key&quot;
                export AWS_SECRET_ACCESS_KEY=&quot;$secret_key&quot;
                cd ${WORKSPACE}/terraform/02-terraform-ecs/
                /usr/local/bin/terraform init
                /usr/local/bin/terraform plan --var-file=vars/nonprod.tfvars
                /usr/local/bin/terraform apply -auto-approve --var-file=vars/nonprod.tfvars
                &apos;&apos;&apos;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>