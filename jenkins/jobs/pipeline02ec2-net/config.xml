<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.6"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.6">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.64">
    <script>pipeline {
    agent { node &apos;aws-ec2-cloud&apos; }
    // agent any
    stages {
        stage (&apos;[i] Clean WC&apos;) {
            steps {
                cleanWs()
            }
        }
        stage (&apos;[i] GIT&apos;) {
            steps {
                git branch: &apos;dev-jenkins&apos;, credentialsId: &apos;github&apos;, url: &apos;https://github.com/publius-github/ci-cd.git&apos;
            }
        }
        stage(&apos;[i] Docker build&apos;) {
            steps {
                    echo &quot;${WORKSPACE}&quot;
                    sh &apos;cd ${WORKSPACE}&apos;
                    sh &apos;ls -lah&apos;
                    sh &apos;docker build -f &quot;app-examples/net-howto/Dockerfile&quot; -t traianusdockerhub/test:latest .&apos;
                }
        }
        stage(&apos;[i] Docker push&apos;) {
            steps {
                withDockerRegistry([ credentialsId: &quot;docker&quot;, url: &apos;&apos; ]) {
                    sh &apos;docker push traianusdockerhub/test:latest&apos;

                }
            }
        }
    }

}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
